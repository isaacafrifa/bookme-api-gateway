server:
  port: 9000

### Loki URL - referenced in 'logback-spring.xml'
loki:
  url: ${LOKI_URL:http://localhost:3100/loki/api/v1/push}

### Other Props
spring:
  application:
    name: api-gateway
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
    gateway:
      ## Gateway Routes
      routes:
          - id: user-service-route
            uri: ${USER_SERVICE_URL:http://localhost:8080}
            predicates:
              - Path=/users/**
            filters:
              - PrefixPath=/api/v1
              - AddResponseHeader=X-Powered-By, IAM Gateway Service
              - name: CircuitBreaker
                args:
                  name: myCircuitBreaker
                  fallbackUri: forward:/usersFallback
          - id: booking-service-route
            uri:
              ${BOOKING_SERVICE_URL:http://localhost:8081}
            predicates:
              - Path=/bookings/**
            filters:
              - PrefixPath=/api/v1
              - AddResponseHeader=X-Powered-By, IAM Gateway Service
              - name: CircuitBreaker
                args:
                  name: myCircuitBreaker
                  fallbackUri: forward:/bookingsFallback
          - id: user-swagger-route
            uri:
              ${USER_SERVICE_URL:http://localhost:8080}
            predicates:
              - Path=/aggregate/user-service/api-docs # route path
            filters:
              - SetPath=/v3/api-docs # forwards to http://localhost:8080/v3/api-docs
              - name: CircuitBreaker
                args:
                  name: myCircuitBreaker
                  fallbackUri: forward:/usersFallback
          - id: booking-swagger-route
            uri:
              ${BOOKING_SERVICE_URL:http://localhost:8081}
            predicates:
              - Path=/aggregate/booking-service/api-docs
            filters:
              - SetPath=/v3/api-docs
              - name: CircuitBreaker
                args:
                  name: myCircuitBreaker
                  fallbackUri: forward:/bookingsFallback

## API docs props
springdoc:
  swagger-ui:
    path: /api-docs/swagger
    urls:
      - name: User Service
        url: /aggregate/user-service/api-docs
      - name: Booking Service
        url: /aggregate/booking-service/api-docs
  api-docs:
    path: /api-docs

## Actuator & monitoring props
management:
  endpoints:
    web:
      exposure:
        include:
          health, info, metrics, prometheus
  endpoint:
    health:
      show-details: always
      ## allow downstream apis to access the actuator of this api gateway
    gateway:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: api-gateway
  tracing:
    sampling:
      probability: 1.0

## Resilience4J props
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-type: count_based
        sliding-window-size: ${CIRCUIT_BREAKER_SLIDING_WINDOW_SIZE:10}
        failure-rate-threshold: ${CIRCUIT_BREAKER_FAILURE_RATE_THRESHOLD:50}
        minimum-number-of-calls: ${CIRCUIT_BREAKER_MINIMUM_CALLS:5}
        wait-duration-in-open-state:
          seconds: ${CIRCUIT_BREAKER_WAIT_DURATION_SECONDS:5}
        permitted-number-of-calls-in-half-open-state: ${CIRCUIT_BREAKER_PERMITTED_CALLS_HALF_OPEN:3}
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      myCircuitBreaker:
        base-config: default
  timelimiter:
    configs:
      default:
        timeout-duration:
          seconds: ${CIRCUIT_BREAKER_TIMEOUT_DURATION:3}
  retry:
    configs:
      default:
        max-attempts: ${RETRY_MAX_ATTEMPTS:3}
        wait-duration:
          seconds: ${RETRY_WAIT_DURATION:2}