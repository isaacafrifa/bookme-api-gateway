# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1  # Single replica as Prometheus can handle multiple targets
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.46.0
          # Lower resources ideal for local dev. Adjust as needed for testing or production workloads.
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - containerPort: 9090  # Default Prometheus port
          args:
            - --enable-feature=exemplar-storage  # Enables exemplar storage for better tracing integration
            - --config.file=/etc/prometheus/prometheus.yml  # Path to configuration file
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus  # Mount point for Prometheus configuration
          # Liveness probe to check Prometheus's health endpoint
          # Determines if the pod should be restarted when unhealthy
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          # Readiness probe to check Prometheus's ready endpoint
          # Ensures the pod is ready to handle traffic
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-configmap  # References the ConfigMap containing prometheus.yml
---
# Prometheus Service
# Exposes Prometheus to other services in the cluster
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090        # Port the service listens on
      targetPort: 9090  # Port on the pod to forward to
---
# Prometheus ConfigMap
# Contains the Prometheus configuration for service discovery and metrics collection
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s     # How frequently to scrape targets
      evaluation_interval: 15s  # How frequently to evaluate rules

    # Configuration for automatic service discovery and metrics collection
    scrape_configs:
      # API Gateway metrics
      - job_name: 'api-gateway'
        metrics_path: '/actuator/prometheus'  # Spring Boot actuator endpoint
        static_configs:
          - targets: ['api-gateway.default.svc.cluster.local:9000']

      # User Service metrics
      - job_name: 'user-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['user-service.default.svc.cluster.local:8080']
            labels:
              application: 'User Service'  # Custom label for better identification

    #   Booking Service metrics
      - job_name: 'booking-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['booking-service.default.svc.cluster.local:8081']
            labels:
              application: 'Booking Service'  # Custom label for better identification
