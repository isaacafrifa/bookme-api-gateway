apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:management
          imagePullPolicy: IfNotPresent
          # Lower resources ideal for local dev. Adjust as needed for testing or production workloads.
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: management
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: RABBITMQ_USERNAME
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: RABBITMQ_PASSWORD
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_MANAGEMENT_PORT
              valueFrom:
                configMapKeyRef:
                  name: infra-config
                  key: RABBITMQ_MANAGEMENT_PORT
        # Liveness probe to check RabbitMQ's health checks endpoint
        # Determines if the pod should be restarted when unhealthy
          livenessProbe:
            httpGet:
              path: /  # Root path to check if RabbitMQ management is up
              port: 15672
            initialDelaySeconds: 60 # Delay before the first check
            periodSeconds: 10   # Check every 10 seconds
            failureThreshold: 3  # Restart after 3 failures
        # Readiness probe to check RabbitMQ's health checks endpoint
        # Ensures the pod is ready to handle traffic
          readinessProbe:
            httpGet:
              path: /
              port: 15672
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3

---

# Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
  type: ClusterIP
